name: CI

on:
  pull_request:
  push:
    branches:
      - main

permissions: read-all

jobs:
  build:
    strategy:
      matrix:
        node-version: ['21.x', '20.x']

    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      security-events: write
    env:
      MAIN_VERSION: '21.x'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup environment
        uses: actions/setup-node@v4.4.0
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> "${GITHUB_OUTPUT}"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: List the state of node modules
        if: ${{ steps.npm-cache.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Prepare coverage report in markdown
        uses: fingerprintjs/action-coverage-report-md@v2.0.1
        id: coverage
        with:
          textReportPath: coverage/coverage.txt

      - name: Add coverage commment to the PR
        uses: marocchino/sticky-pull-request-comment@v2.9.2
        with:
          message: ${{ steps.coverage.outputs.markdownReport }}

      - name: Add coverage report to the job summary
        run: |
          echo "## Code Coverage v${{ matrix.node-version }}" >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.coverage.outputs.markdownReport }}" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload page artifacts
        if: ${{ matrix.node-version == env.MAIN_VERSION }}
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: coverage

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'javascript-typescript'
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript-typescript'

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: 'pages'
      cancel-in-progress: false

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: '${{ steps.deployment.outputs.page_url }}lcov-report'

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
